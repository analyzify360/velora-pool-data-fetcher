name: CI/CD Pipeline

on:
  push:
    branches:
      - feat/pipeline
  pull_request:
    branches:
      - feat/pipeline

jobs:
  build:
    runs-on: ubuntu-latest

    env:  # Set environment variables for all steps in this job
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      ETHEREUM_RPC_NODE_URL: ${{ secrets.ETHEREUM_RPC_NODE_URL }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker build -t velora-pool-data-fetcher .

      - name: Clear Database
        run: |
          # Replace with your database clearing command
          echo "Clearing the database..."
          
          # Export password to avoid password prompt
          export PGPASSWORD=$POSTGRES_PASSWORD
          
          # Run the SQL command to drop all tables
          psql -U $POSTGRES_USER -d $POSTGRES_DB -h $POSTGRES_HOST -p $POSTGRES_PORT -c "
          DO \$\$ DECLARE
              r RECORD;
          BEGIN
              FOR r IN (SELECT tablename FROM pg_tables WHERE schemaname = 'public') LOOP
                  EXECUTE 'DROP TABLE IF EXISTS ' || quote_ident(r.tablename) || ' CASCADE';
              END LOOP;
          END \$\$;
          "
          
          # Unset the password variable for security
          unset PGPASSWORD

          echo "All tables deleted successfully."
          
      - name: Run docker file
        run: |
          docker run -d -p 8000 velora-pool-data-fetcher
